server:
  port: ${HTTPS_PORT:8443}
  ssl:
    enabled: ${SERVER_SSL_ENABLED:false}
    key-store: ${SERVER_SSL_KEY_STORE:classpath:keystore.jks}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASSWORD:changeit}
    key-store-type: ${SERVER_SSL_KEY_STORE_TYPE:PKCS12}
config1:
  key: name
  value: tom
  child:
    name: andy
    age: 10
config2:
  key: dept
  value: IT
  child:
    name: tim
    age: 12
spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
  data:
    cassandra:
      keyspace-name: test_keyspace
      contact-points: ${CASSANDRA_CONTACT_POINTS:localhost}
      port: ${CASSANDRA_PORT:9042}
      schema-action: create_if_not_exists
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  cloud:
    stream:
      bindings:
        process-in-0.destination: my-topic
      kafka:
        streams:
          binder:
            applicationId: my-app
            brokers: localhost:9092
            autoCreateTopics: true
            autoAddPartitions: true
            minPartitionCount: 1
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  servlet:
    multipart:
      file-size-threshold: 50MB
      max-file-size: 50MB
      max-request-size: 5MB
cos:
  endpoint: https://s3.us-east.cloud-object-storage.appdomain.cloud
  location: us-east
  access-key: ${COS_ACCESS_KEY:myAccessKey}
  secret-key: ${COS_SECRET_KEY:mySecretKey}
  default-bucket-name: ${COS_BUCKET_NAME:default_bucket}
#  api-key: ${COS_API_KEY:myAccessKey}
#  service-instance-id: ${COS_SERVICE_INSTANCE_ID:myServiceId}
